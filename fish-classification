{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2170465,"sourceType":"datasetVersion","datasetId":1165452}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**PROJENİN AMACI**\n\nBu projenin amacı, ANN kullanarak balık türlerini doğru şekilde sınıflandırmak ve modelin genelleme kabiliyetini artırmaktır. Genelleme kabiliyeti, modelin daha önce görmediği yeni verileri doğru şekilde tahmin edebilme yeteneğidir. Ancak, aşırı öğrenme (overfitting) bu kabiliyeti engelleyebilir. Bu sorunu aşmak için early stopping ve dropout gibi yöntemler kullanılmıştır. Ek olarak, hiperparametre optimizasyonu yapılmıştır.","metadata":{}},{"cell_type":"markdown","source":"**KÜTÜPHANELER İMPORT EDİLDİ**","metadata":{}},{"cell_type":"code","source":"!pip install scikeras","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport os\nimport collections\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport cv2\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications.mobilenet_v2 import preprocess_input\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom scikeras.wrappers import KerasClassifier\n\n\n\nfrom tensorflow.keras.optimizers import SGD, RMSprop, Adam\nfrom tensorflow.keras.models import Sequential, load_model\nfrom tensorflow.keras.regularizers import l2\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\nfrom tensorflow.keras.layers import Rescaling, Input, Dense, Dropout, BatchNormalization, Flatten\nfrom tensorflow.keras.initializers import RandomNormal, RandomUniform, GlorotUniform, GlorotNormal, HeNormal\nfrom keras.optimizers.schedules import ExponentialDecay\nfrom keras_tuner import RandomSearch, GridSearch, BayesianOptimization\nfrom keras_tuner.engine.hyperparameters import HyperParameters","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"**VERİ SETİNİ OKUMA**","metadata":{}},{"cell_type":"code","source":"label = []\npath = []\nfish_dir = '/kaggle/input/a-large-scale-fish-dataset/Fish_Dataset/Fish_Dataset'\n\nfor dir_name, _, filenames in os.walk(fish_dir):\n    for filename in filenames:\n        if os.path.splitext(filename)[-1] == '.png':\n            if dir_name.split()[-1] != 'GT':\n                label.append(os.path.split(dir_name)[-1])\n                path.append(os.path.join(dir_name, filename))\n                \ndata = pd.DataFrame(columns=['path', 'label'])\ndata['path'] = path\ndata['label'] = label","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Bu kod, balık fotoğraflarının dosya yollarını ve ilgili sınıf etiketlerini belirler. .png uzantılı dosyalar ve bu dosyaların etiketleri, listelere eklenir. Ardından, bu veriler path ve label sütunlarına sahip bir pandas DataFrame'e kaydedilir. Böylece, balık fotoğrafları etiketlenmiş ve model eğitimi veya analiz yapmak için hazır hale getirilmiş olur.\n\nÖzetle: Bu kodun ile balık fotoğraflarının dosya yollarını ve etiketlerini içeren bir pandas DataFrame oluşturulmuştur.","metadata":{}}]}